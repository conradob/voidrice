#!/bin/sh

set -eu
shopt -s lastpipe

export LANG=C

volume_bluetooth() {
	local method
	[[ $1 == up ]] && method=VolumeUp || method=VolumeDown
	dbus-send \
		--print-reply --type=method_call \
		--system --dest=org.bluez \
		/org/bluez/hci0/dev_"$2" org.bluez.MediaControl1."$method" >/dev/null
}

volume_pulseaudio() {
	local sign
	[[ $1 == up ]] && sign="+" || sign="-"
	pactl set-sink-volume @DEFAULT_SINK@ "$sign"5%
}

# Volume up/down via:
#  - bluetooth AVRCP (if avilable and default sink)
#  - pulseaudio (otherwise)
#
# Motivation: lowering volume in software degrades quality as the upper
# bits are unused.
action_volume() {
	if [[ ${1-} != @(up|down) ]]; then
		echo 'up|down expected'
		exit 1
	fi

	if [[ $(pactl info) =~ "Default Sink: bluez_sink."([0-9A-F_]*)".a2dp_sink" ]]; then
		bt_addr="${BASH_REMATCH[1]}"
		volume_bluetooth "$1" "$bt_addr" && exit 0
	fi

	volume_pulseaudio "$1"
}

action_mute()     { pactl set-sink-mute   @DEFAULT_SINK@   toggle; }
action_mic_mute() { pactl set-source-mute @DEFAULT_SOURCE@ toggle; }

# Listen for MPRIS events and remember which player we interacted with last
action_mpris_daemon() {
	playerctl --all-players --follow --format '{{playerName}} {{status}}' status \
	| while read -r player status; do
		echo $status
		if [[ $status == @(Paused|Playing) ]]; then
			printf "%s\n" "$player" >"${XDG_CACHE_HOME}/liskin-media-last"
		fi
	done
}

get_mpris_playing() {
	playerctl --all-players --format '{{playerName}} {{status}}' status \
	| while read -r player status; do
		if [[ $status == Playing ]]; then
			printf "%s\n" "$player"
			return
		fi
	done

	return 1
}

get_mpris_one_playing_or_paused() {
	local -a players=()

	playerctl --all-players --format '{{playerName}} {{status}}' status \
	| while read -r player status; do
		if [[ $status == @(Paused|Playing) ]]; then
			players+=("$player")
		fi
	done

	if (( "$(( ${players[@]+${#players[@]}} ))" == 1 )); then
		echo "${players[0]}"
	else
		return 1
	fi
}

get_mpris_last() {
	if [[ -f "${XDG_CACHE_HOME}/liskin-media-last" ]]; then
		echo "$(< "${XDG_CACHE_HOME}/liskin-media-last")"
	else
		return 1
	fi
}

get_mpris_smart() {
	get_mpris_playing || get_mpris_one_playing_or_paused || get_mpris_last
}

action_play() { p=$(get_mpris_smart); playerctl -p "$p" play; }
action_pause() { p=$(get_mpris_smart); playerctl -p "$p" pause; }
action_playpause() { p=$(get_mpris_smart); playerctl -p "$p" play-pause; }
action_stop() { playerctl -a stop; }
action_next() { p=$(get_mpris_playing); playerctl -p "$p" next; }
action_prev() { p=$(get_mpris_playing); playerctl -p "$p" previous; }
action_current() {
  p=$(get_mpris_playing);
  artist=$(playerctl -p "$p" metadata artist);
  title=$(playerctl -p "$p" metadata title);
  if [ -z "$artist" ]; then
    echo $title
  else
    echo "$artist - $title"
  fi
}
action_media() {
  echo $(get_mpris_playing)
}

if [[ $(type -t "action_${1-}") == function ]]; then
	"action_$1" "${@:2}"
else
	echo "unexpected action: ${1-}"
fi
