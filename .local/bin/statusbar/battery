#!/bin/sh

# Prints all batteries, their percentage remaining and an emoji corresponding
# to charge status (🔌 for plugged up, 🔋 for discharging on battery, etc.).

getIcon() {
  declare -n ret=$1
  [ "$3" = "Charging" ] && ret="" && return 0
  [ "$3" = "Full" ] && ret="" && return 0
  [ "$3" = "Unknown" ] && ret="" && return 0
  [ "$2" -ge 95 ] && ret="" && return 0
  [ "$2" -ge 90 ] && ret="" && return 0
  [ "$2" -ge 80 ] && ret="" && return 0
  [ "$2" -ge 70 ] && ret="" && return 0
  [ "$2" -ge 60 ] && ret="" && return 0
  [ "$2" -ge 50 ] && ret="" && return 0
  [ "$2" -ge 40 ] && ret="" && return 0
  [ "$2" -ge 30 ] && ret="" && return 0
  [ "$2" -ge 20 ] && ret="" && return 0
  [ "$2" -ge 10 ] && ret="" && return 0
  [ "$2" -ge 0 ] && ret="" && return 0
}

case $BLOCK_BUTTON in
	3) notify-send "🔋 Battery module" "🔋: discharging
🛑: not charging
♻: stagnant charge
🔌: charging
⚡: charged
❗: battery very low!
- Scroll to change adjust xbacklight." ;;
	4) setbrightness up ;;
	5) setbrightness down ;;
	6) "$TERMINAL" -e "$EDITOR" "$0" ;;
esac

# acpi alternative
# acpi | sed "s/Battery [0-9]: //;s/[Dd]ischarging, /🔋/;s/[Nn]ot charging, /🛑/;s/[Cc]harging, /🔌/;s/[Uu]nknown, /♻️/;s/[Ff]ull, /⚡/;s/ \(remaining\|until charged\)//"; exit

# Loop through all attached batteries.
for battery in /sys/class/power_supply/BAT?
do
	# Get its remaining capacity and charge status.
	capacity=$(cat "$battery"/capacity 2>/dev/null) || break
	status=$(cat "$battery"/status 2>/dev/null) || break
  getIcon icon $capacity $status

  [ "$capacity" -le 15 ] && warn=" ❗"

	printf "%s%s%s%% " "$icon " "$warn" "$capacity"
	unset warn
done | sed 's/ *$//'
